{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movies","movies","map","movie","show","name","image","id","src","medium","alt","key","error","console","log","App","useState","query","setQuery","setMovies","setError","isLoading","setisLoading","fetchData","q","a","axios","get","res","status","data","length","Error","statusText","className","onSubmit","e","preventDefault","type","value","required","onChange","target","onClick","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmBeA,EAjBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,6BACGA,EAAOC,KAAI,SAACC,GACX,IAAK,IAAD,EAGEA,EADFC,KAAQC,EAFR,EAEQA,KAAMC,EAFd,EAEcA,MAAOC,EAFrB,EAEqBA,GAEvB,OAAO,yBAAKC,IAAKF,EAAMG,OAAQC,IAAKL,EAAMM,IAAKJ,IAC/C,MAAOK,GACPC,QAAQC,IAAIF,S,kCCyEPG,MAhFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENf,EAFM,KAEEkB,EAFF,OAGaH,oBAAS,GAHtB,mBAGNJ,EAHM,KAGCQ,EAHD,OAIqBJ,oBAAS,GAJ9B,mBAINK,EAJM,KAIKC,EAJL,KAMPC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBH,GAAa,GADG,SAEEI,IAAMC,IAAN,+CAAkDH,IAFpD,aAEVI,EAFU,QAGRC,QAAU,KAAOD,EAAIC,QAAU,KAHvB,iBAKQ,KADhB5B,EAAS2B,EAAIE,MACRC,QACTX,GAAS,GAEXD,EAAUlB,GACViB,EAAS,IACTI,GAAa,GAVC,8BAYR,IAAIU,MAAMJ,EAAIK,YAZN,QAchBpB,QAAQC,IAAIb,EAAO8B,QAdH,4CAAH,sDAmCf,OACE,6BAASG,UAAU,kBACjB,4DACA,0BAAMA,UAAU,aAAaC,SATZ,SAACC,GACpBA,EAAEC,iBACFxB,QAAQC,IAAIG,GACZM,EAAUN,KAQN,2BACEqB,KAAK,OACLjC,KAAK,cACLE,GAAG,cACHgC,MAAOtB,EACPuB,UAAQ,EACRC,SAAU,SAACL,GACTlB,EAASkB,EAAEM,OAAOH,UAGtB,4BAAQD,KAAK,SAASJ,UAAU,OAAhC,YAGA,4BACEI,KAAK,SACLJ,UAAU,MACVS,QAAS,WACPxB,EAAU,MAJd,UAUF,6BAASe,UAAU,cACjB,4BACGb,GAAa,kBAAC,IAAD,CAAQiB,KAAK,UAAUM,MAAM,wBAE7C,4BAAKhC,GAAS,4BACd,kBAAC,EAAD,CAAQX,OAAQA,OC1ExB4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d05ddf3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Movies = ({ movies }) => {\r\n  return (\r\n    <div>\r\n      {movies.map((movie) => {\r\n        try {\r\n          const {\r\n            show: { name, image, id },\r\n          } = movie;\r\n          return <img src={image.medium} alt={name} key={id} />;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React, { useState, useEffect } from \"react\";\nimport Movies from \"./Movies\";\nimport Loader from \"react-loader-spinner\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setisLoading] = useState(false);\n\n  const fetchData = async (q) => {\n    setisLoading(true);\n    const res = await axios.get(`http://api.tvmaze.com/search/shows?q=${q}`);\n    if (res.status >= 200 && res.status <= 299) {\n      const movies = res.data;\n      if (movies.length === 0) {\n        setError(true);\n      }\n      setMovies(movies);\n      setQuery(\"\");\n      setisLoading(false);\n    } else {\n      throw new Error(res.statusText);\n    }\n    console.log(movies.length);\n  };\n\n  // useEffect(() => {\n  //   fetch(\" http://api.tvmaze.com/singlesearch/shows?q=chicken\")\n  //     .then((resp) => {\n  //       return resp.json();\n  //     })\n  //     .then((singleMovie) => {\n  //       const { show } = singleMovie;\n  //       const singleImage = show.image.original;\n  //       console.log(singleImage);\n  //     });\n  // }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(query);\n    fetchData(query);\n  };\n\n  return (\n    <section className=\"section-center\">\n      <h3>Search for Movies and Series</h3>\n      <form className=\"lorem-form\" onSubmit={handleSubmit}>\n        {/* <label htmlFor=\"amount\">paragraph:</label> */}\n        <input\n          type=\"text\"\n          name=\"movie-title\"\n          id=\"movie-title\"\n          value={query}\n          required\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n        <button type=\"submit\" className=\"btn\">\n          generate\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn\"\n          onClick={() => {\n            setMovies([]);\n          }}\n        >\n          reset\n        </button>\n      </form>\n      <article className=\"lorem-text\">\n        <h1>\n          {isLoading && <Loader type=\"Circles\" color=\"hsl(205, 78%, 60%)\" />}\n        </h1>\n        <h2>{error && \"Oops, nothing to display\"}</h2>\n        <Movies movies={movies} />\n      </article>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}